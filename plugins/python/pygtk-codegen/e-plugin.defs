;; -*- scheme -*-
; object definitions ...
(define-object n
  (in-module "EPlugi")
  (parent "GObject")
  (c-name "EPlugin")
  (gtype-id "E_TYPE_PLUGIN")
)

(define-object Hook
  (in-module "EPlugin")
  (parent "GObject")
  (c-name "EPluginHook")
  (gtype-id "E_TYPE_PLUGIN_HOOK")
)

(define-object Lib
  (in-module "EPlugin")
  (parent "EPlugin")
  (c-name "EPluginLib")
  (gtype-id "E_TYPE_PLUGIN_LIB")
)

(define-object TypeHook
  (in-module "EPlugin")
  (parent "EPluginHook")
  (c-name "EPluginTypeHook")
  (gtype-id "E_TYPE_PLUGIN_TYPE_HOOK")
)

;; Enumerations and flags ...


;; From e-plugin.h

(define-function e_plugin_get_type
  (c-name "e_plugin_get_type")
  (return-type "GType")
)

(define-method construct
  (of-object "EPlugin")
  (c-name "e_plugin_construct")
  (return-type "int")
  (parameters
    '("xmlNodePtr" "root")
  )
)

(define-function e_plugin_add_load_path
  (c-name "e_plugin_add_load_path")
  (return-type "none")
  (parameters
    '("const-char" "*")
  )
)

(define-function e_plugin_load_plugins
  (c-name "e_plugin_load_plugins")
  (return-type "int")
)

(define-function e_plugin_list_plugins
  (c-name "e_plugin_list_plugins")
  (return-type "GSList*")
)

(define-function e_plugin_register_type
  (c-name "e_plugin_register_type")
  (return-type "none")
  (parameters
    '("GType" "type")
  )
)

(define-method invoke
  (of-object "EPlugin")
  (c-name "e_plugin_invoke")
  (return-type "void*")
  (parameters
    '("const-char*" "name")
    '("void*" "data")
  )
)

(define-method enable
  (of-object "EPlugin")
  (c-name "e_plugin_enable")
  (return-type "none")
  (parameters
    '("int" "state")
  )
)

(define-method get_configure_widget
  (of-object "EPlugin")
  (c-name "e_plugin_get_configure_widget")
  (return-type "GtkWidget*")
)

(define-function e_plugin_xml_prop
  (c-name "e_plugin_xml_prop")
  (return-type "char*")
  (parameters
    '("xmlNodePtr" "node")
    '("const-char*" "id")
  )
)

(define-function e_plugin_xml_prop_domain
  (c-name "e_plugin_xml_prop_domain")
  (return-type "char*")
  (parameters
    '("xmlNodePtr" "node")
    '("const-char*" "id")
    '("const-char*" "domain")
  )
)

(define-function e_plugin_xml_int
  (c-name "e_plugin_xml_int")
  (return-type "int")
  (parameters
    '("xmlNodePtr" "node")
    '("const-char*" "id")
    '("int" "def")
  )
)

(define-function e_plugin_xml_content
  (c-name "e_plugin_xml_content")
  (return-type "char*")
  (parameters
    '("xmlNodePtr" "node")
  )
)

(define-function e_plugin_xml_content_domain
  (c-name "e_plugin_xml_content_domain")
  (return-type "char*")
  (parameters
    '("xmlNodePtr" "node")
    '("const-char*" "domain")
  )
)

(define-function e_plugin_lib_get_type
  (c-name "e_plugin_lib_get_type")
  (return-type "GType")
)

(define-function e_plugin_hook_get_type
  (c-name "e_plugin_hook_get_type")
  (return-type "GType")
)

(define-function e_plugin_hook_register_type
  (c-name "e_plugin_hook_register_type")
  (return-type "none")
  (parameters
    '("GType" "type")
  )
)

(define-method hook_new
  (of-object "EPlugin")
  (c-name "e_plugin_hook_new")
  (return-type "EPluginHook*")
  (parameters
    '("xmlNodePtr" "root")
  )
)

(define-method enable
  (of-object "EPluginHook")
  (c-name "e_plugin_hook_enable")
  (return-type "none")
  (parameters
    '("int" "state")
  )
)

(define-function e_plugin_hook_mask
  (c-name "e_plugin_hook_mask")
  (return-type "guint32")
  (parameters
    '("xmlNodePtr" "root")
    '("const-struct-_EPluginHookTargetKey*" "map")
    '("const-char*" "prop")
  )
)

(define-function e_plugin_hook_id
  (c-name "e_plugin_hook_id")
  (return-type "guint32")
  (parameters
    '("xmlNodePtr" "root")
    '("const-struct-_EPluginHookTargetKey*" "map")
    '("const-char*" "prop")
  )
)

(define-function e_plugin_type_hook_get_type
  (c-name "e_plugin_type_hook_get_type")
  (return-type "GType")
)


